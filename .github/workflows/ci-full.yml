name: üöÄ CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4
      
    - name: ‚òï Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: üîç Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: üß™ Run tests
      run: mvn test
      
    - name: üìä Generate test report
      run: mvn jacoco:report
      
    - name: üì§ Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./target/site/jacoco/jacoco.xml
        flags: unittests
        name: codecov-umbrella
        
    - name: üèóÔ∏è Build application
      run: mvn clean compile
      
    - name: üì¶ Package application
      run: mvn package -DskipTests
      
  security:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4
      
    - name: ‚òï Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: üîí Run Maven dependency check
      run: mvn dependency:check
      
    - name: üîç Run OWASP dependency check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: 'TechTrend'
        path: '.'
        format: 'HTML'
        out: 'reports'
        args: >
          --failOnCVSS 7
          --enableRetired
          --log reports/dependency-check.log
        
    - name: üìã Upload security report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-report
        path: reports/
        retention-days: 30
        
  quality:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4
      
    - name: ‚òï Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: üîç Run SonarQube analysis
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      run: |
        mvn clean verify sonar:sonar \
        -Dsonar.projectKey=techtrend-microservice \
        -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
        -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
        -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml \
        -Dsonar.java.binaries=target/classes \
        -Dsonar.sources=src/main/java \
        -Dsonar.tests=src/test/java
